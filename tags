!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Adder	include/MPE/Emitter.hpp	/^         struct Adder$/;"	s	class:MPE::Emitter
CIRCLE	include/MPE/Emitter.hpp	/^         enum Shape{RECTANGLE,CIRCLE};$/;"	e	enum:MPE::Emitter::Shape
CONFIG_INC	include/MPE/Config.hpp	2;"	d
Context	include/MPE/Emitter.hpp	/^         struct Context$/;"	s	class:MPE::Emitter
Dispersion	include/MPE/Emitter.hpp	/^         enum Dispersion{LINEAR,RADIAL,RANDOM,STATIC};$/;"	g	class:MPE::Emitter
EMITTER_INC	include/MPE/Emitter.hpp	3;"	d
Emitter	include/MPE/Emitter.hpp	/^   class Emitter$/;"	c	namespace:MPE
Emitter	src/MPE/Emitter.cpp	/^   Emitter::Emitter()$/;"	f	class:MPE::Emitter
Emitter	src/MPE/Emitter.cpp	/^   Emitter::Emitter(System::Ptr theSystem):$/;"	f	class:MPE::Emitter
ID	include/MPE/Emitter.hpp	/^         typedef std::string ID;$/;"	t	class:MPE::Emitter
LINEAR	include/MPE/Emitter.hpp	/^         enum Dispersion{LINEAR,RADIAL,RANDOM,STATIC};$/;"	e	enum:MPE::Emitter::Dispersion
MPE	include/MPE/Emitter.hpp	/^namespace MPE$/;"	n
MPE	include/MPE/Particle.hpp	/^namespace MPE$/;"	n
MPE	include/MPE/System.hpp	/^namespace MPE$/;"	n
MPE	src/MPE/Emitter.cpp	/^namespace MPE$/;"	n	file:
PARTICLE_INC	include/MPE/Particle.hpp	2;"	d
PPS	include/MPE/Emitter.hpp	/^         float PPS;$/;"	m	class:MPE::Emitter
Particle	include/MPE/Particle.hpp	/^   class Particle$/;"	c	namespace:MPE
Particle	include/MPE/Particle.hpp	/^         Particle(sf::Texture& theTexture, sf::Vector2f thePosition, sf::Vector2f theLinearVelocity, float theAngularVelocity,  sf::Color theColor, float theTTL):$/;"	f	class:MPE::Particle
Ptr	include/MPE/Emitter.hpp	/^         typedef boost::shared_ptr<Emitter> Ptr;$/;"	t	class:MPE::Emitter
Ptr	include/MPE/System.hpp	/^         typedef boost::shared_ptr<System> Ptr;$/;"	t	class:MPE::System
RADIAL	include/MPE/Emitter.hpp	/^         enum Dispersion{LINEAR,RADIAL,RANDOM,STATIC};$/;"	e	enum:MPE::Emitter::Dispersion
RANDOM	include/MPE/Emitter.hpp	/^         enum Dispersion{LINEAR,RADIAL,RANDOM,STATIC};$/;"	e	enum:MPE::Emitter::Dispersion
RECTANGLE	include/MPE/Emitter.hpp	/^         enum Shape{RECTANGLE,CIRCLE};$/;"	e	enum:MPE::Emitter::Shape
STATIC	include/MPE/Emitter.hpp	/^         enum Dispersion{LINEAR,RADIAL,RANDOM,STATIC};$/;"	e	enum:MPE::Emitter::Dispersion
SYSTEM_INC	include/MPE/System.hpp	2;"	d
Shape	include/MPE/Emitter.hpp	/^         enum Shape{RECTANGLE,CIRCLE};$/;"	g	class:MPE::Emitter
System	include/MPE/System.hpp	/^   class System$/;"	c	namespace:MPE
TTL	include/MPE/Emitter.hpp	/^         float TTL;$/;"	m	class:MPE::Emitter
TotalParticles	include/MPE/Emitter.hpp	/^         float TotalParticles;$/;"	m	class:MPE::Emitter
angle	include/MPE/Emitter.hpp	/^            float angle;$/;"	m	struct:MPE::Emitter::Context
create	src/MPE/Emitter.cpp	/^   Emitter::Ptr Emitter::create()$/;"	f	class:MPE::Emitter
create	src/MPE/Emitter.cpp	/^   Emitter::Ptr Emitter::create(System::Ptr theSystem)$/;"	f	class:MPE::Emitter
emittedParticles	include/MPE/Emitter.hpp	/^            int emittedParticles;$/;"	m	struct:MPE::Emitter::Context
emitterID	include/MPE/Emitter.hpp	/^            ID emitterID;$/;"	m	struct:MPE::Emitter::Context
height	include/MPE/Emitter.hpp	/^            float height;$/;"	m	struct:MPE::Emitter::Context
lifetime	include/MPE/Emitter.hpp	/^            float lifetime;$/;"	m	struct:MPE::Emitter::Context
mAngularVelocity	include/MPE/Particle.hpp	/^         float mAngularVelocity;$/;"	m	class:MPE::Particle
mDispersion	include/MPE/Emitter.hpp	/^         Dispersion mDispersion;$/;"	m	class:MPE::Emitter
mEmitters	include/MPE/System.hpp	/^         std::list<Emitter::Ptr> mEmitters;$/;"	m	class:MPE::System
mID	include/MPE/Emitter.hpp	/^         ID mID;$/;"	m	class:MPE::Emitter
mLinearVelocity	include/MPE/Particle.hpp	/^         sf::Vector2f mLinearVelocity;$/;"	m	class:MPE::Particle
mParticles	include/MPE/System.hpp	/^         std::list<Particle> mParticles;$/;"	m	class:MPE::System
mShape	include/MPE/Emitter.hpp	/^         Shape mShape;$/;"	m	class:MPE::Emitter
mSprite	include/MPE/Particle.hpp	/^         sf::Sprite mSprite;$/;"	m	class:MPE::Particle
mTTL	include/MPE/Particle.hpp	/^         float mTTL;$/;"	m	class:MPE::Particle
mTexture	include/MPE/Emitter.hpp	/^         sf::Texture mTexture;$/;"	m	class:MPE::Emitter
position	include/MPE/Emitter.hpp	/^            sf::Vector2f position;$/;"	m	struct:MPE::Emitter::Context
update	include/MPE/Particle.hpp	/^         void update(float theElapsedTime)$/;"	f	class:MPE::Particle
width	include/MPE/Emitter.hpp	/^            float width;$/;"	m	struct:MPE::Emitter::Context
